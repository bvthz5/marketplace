using MarketPlaceUser.Bussiness.Dto.Forms.Validations;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MarketPlaceUserTest.Validations
{
    public class EmailAttributeTests
    {
        [Fact]
        public void EmailAttribute_ValidEmail_ReturnsTrue()
        {
            // Arrange
            var emailAttribute = new EmailAttribute();
            var email = "test.email@example.com";

            // Act
            var result = emailAttribute.IsValid(email);

            // Assert
            Assert.True(result);
        }

        [Fact]
        public void EmailAttribute_EmptyEmail_ReturnsFalse()
        {
            // Arrange
            var emailAttribute = new EmailAttribute();
            var email = "";

            // Act
            var result = emailAttribute.IsValid(email);

            // Assert
            Assert.False(result);
            Assert.Equal("Email is Required", emailAttribute.ErrorMessage);
        }

        [Fact]
        public void EmailAttribute_NullEmail_ReturnsFalse()
        {
            // Arrange
            var emailAttribute = new EmailAttribute();
            string email = null;

            // Act
            var result = emailAttribute.IsValid(email);

            // Assert
            Assert.False(result);
            Assert.Equal("Email is Required", emailAttribute.ErrorMessage);
        }

        [Fact]
        public void EmailAttribute_EmailLengthExceedsLimit_ReturnsFalse()
        {
            // Arrange
            var emailAttribute = new EmailAttribute();
            var email = "testemail
            // Act
            var result = emailAttribute.IsValid(email);

            // Assert
            Assert.False(result);
            Assert.Equal("Email Length should be less than 255", emailAttribute.ErrorMessage);
        }
    }
}